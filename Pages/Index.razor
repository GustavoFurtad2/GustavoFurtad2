@page "/"

<PageTitle>Gustavo Furtado</PageTitle>

    <div class="content">
        <div class="about-me">
            <h1>
                Gustavo Furtado
            </h1>

            <BR>

            <div class="profile">
            <h3>
                Software Developer & Backend
            </h3>
            <img id="picture" src="picture.png"/>
            </div>
            <BR>
        <div class="title">
            <h2>Sobre mim</h2>
            <div class="description">
                <p>
                    @((MarkupString)AboutMeText)
                </p>
            </div>
        </div>
        <div class="tecnologies">
            <h2>Principais Tecnologias</h2>
            <div class="description">
                @foreach (var tech in Tecnologies)
                {
                    <a href="@tech" target="_blank">
                        <img src="@tech"/>
                    </a>
                }
            </div>
        </div>
        <div class="projects">
            <h2>Projetos</h2>
            <div class="description">
                @foreach (var project in Projects)
                {
                    <div class="project">
                        <h3>- @project.Name</h3>
                        <a href="@project.Link" target="_blank">
                            <img src="@project.Image" />
                        </a>
                        <BR>
                        <p>@project.Description</p>
                    </div>
                }
            </div>
        </div>
        </div>
    </div>

<style>
    * {
        font-family: 'Verdana', 'Geneva', 'Tahoma', 'sans-serif';
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .topbar {
        background-color: rgb(78, 9, 66);
        color: white;
        padding: 18px 40px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: sticky;
        top: 0;
        width: 100%;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
        height: 60px;
        z-index: 9999;
    }

        .topbar a {
            color: white;
            text-decoration: none;
            margin: 0 15px;
            position: relative;
            padding: 8px 12px;
            transition: color 0.3s ease;
            z-index: 2;
        }

            .topbar a::before {
                content: '';
                position: absolute;
                top: -18px;
                left: 0;
                width: 100%;
                height: 65px;
                background-color: rgb(104, 70, 94);
                opacity: 0;
                transition: opacity 0.3s ease;
                z-index: -1;
            }

            .topbar a:hover::before {
                opacity: 1;
            }

            .topbar a:hover {
                color: #FFD700;
            }

    .name {
        font-size: 20px;
    }

    .content {
        text-align: center;
    }

        .content .about-me .profile h3 {
            font-size: 3vh;
        }


    #picture {
        margin-top: 2vh;
        border-radius: 50%;
        width: 35vmin;
        height: 35vmin;
        max-width: 350px;
        max-height: 350px;
        object-fit: cover;
    }

    .title {
        padding-top: 1vh;
        color: initial;
        color: rgb(78, 9, 66);
        padding-left: 25%;
        text-align: left;
    }

    .tecnologies {
        display: flex;
        flex-direction: column;
        padding-top: 1vh;
        color: rgb(78, 9, 66);
        padding-left: 25%;
        text-align: left;
    }

    .tecnologies .description a img {
        width: 5vmin;
        height: 5vmin;
        margin-left: 0.5vw;
    }

    .projects {
        padding-top: 1vh;
        color: rgb(78, 9, 66);
        padding-left: 25%;
        text-align: left;
    }

    .project {
        margin-left: 2vw;
    }

    .project img {
        margin-left: 1vw;
        border: 1px solid rgb(78, 9, 66);
        border-radius: 5px;
    }

    .project p {
        margin-top: 1vh;
        margin-left: 1vw;   
    }

    .description {
        padding-top: 1vh;
    }

    .title .description {
        max-width: 75%;
    }
</style>

@code {

    private string FullAboutMeText = "ㅤTudo bem? Sou desenvolvedor de software e desenvolvedor backend preparado para solucionar vários tipos de problemas, aprendo rápido novas tecnologias. <br>ㅤEstou sempre procurando melhorar minhas aplicações, bem como criar novas aplicações";
    private string AboutMeText = "";
    private List<String> Tecnologies = new List<String>
    {
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/csharp/csharp-original.svg",
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/git/git-original.svg",
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/blazor/blazor-original.svg",
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/dotnetcore/dotnetcore-original.svg",
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/lua/lua-original.svg",
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/cplusplus/cplusplus-original.svg",
        "https://raw.githubusercontent.com/devicons/devicon/master/icons/javascript/javascript-original.svg",
    };

    private List<Project> Projects = new List<Project>
    {
        new Project { Name = "Storm", Link = "https://github.com/GustavoFurtad2/Storm", Description = "É uma linguagem de programação interpretada", Image = "storm_project.png"}
    };

    private int CurrentIndex = 0;
    private System.Timers.Timer? Timer;

    protected override void OnInitialized()
    {
        StartTyping();
    }

    private void StartTyping()
    {
        AboutMeText = "";
        CurrentIndex = 0;

        Timer = new System.Timers.Timer((1000 / FullAboutMeText.Length) * 2);
        Timer.Elapsed += (sender, e) => UpdateText();
        Timer.AutoReset = true;
        Timer.Start();
    }

    private void UpdateText()
    {
        if (CurrentIndex < FullAboutMeText.Length)
        {
            if (FullAboutMeText[CurrentIndex] == '<' && CurrentIndex + 3 < FullAboutMeText.Length && FullAboutMeText.Substring(CurrentIndex, 4) == "<br>")
            {
                AboutMeText += "<br>";
                CurrentIndex += 4;
            }
            else
            {
                AboutMeText += FullAboutMeText[CurrentIndex];
                CurrentIndex++;
            }

            InvokeAsync(StateHasChanged);
        }
        else
        {
            Timer?.Stop();
        }
    }

    public class Project
    {
        public string Name { get; set; }
        public string Link { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }
    }
}